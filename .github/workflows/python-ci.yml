name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    env:
      USING_COVERAGE: "3.11"

    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Use Node.js
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
      uses: actions/setup-node@v3
      with:
        node-version: 21.x
    - name: Install Rye
      uses: baptiste0928/cargo-install@v2
      with:
        crate: rye
        git: https://github.com/astral-sh/rye
        branch: main
    - name: Install Dependencies
      run: |
        rye config --set-bool behavior.use-uv=true
        rye sync
        rye install tox-gh-actions
    - name: Install mermaid
      run: |
          npm install -g @mermaid-js/mermaid-cli
    - name: Test with tox
      run: rye run tox -e py${{ matrix.python-version }}
    - name: Test with tox linter
      run: rye run tox -e check-all
    - name: Upload coverage to Codecov
      if: |
        contains(env.USING_COVERAGE, matrix.python-version) 
        && matrix.platform == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

  package:
    name: Build package
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install build 
      run: python -m pip install build

    - name: Build package
      run: pyproject-build

    - name: Show result
      run: ls -l dist

    - name: Install package
      run: python -m pip install .

    - name: Import package
      run: python -c "import pytred; print(pytred.__version__)"
